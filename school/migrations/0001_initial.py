# Generated by Django 5.2a1 on 2025-04-10 11:42

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(default='Not stated', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=15)),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('role', models.CharField(choices=[('STUDENT', 'Student'), ('TEACHER', 'Teacher'), ('PARENT', 'Parent'), ('STAFF', 'Staff')], max_length=10)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school.address')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('person', models.OneToOneField(limit_choices_to={'role': 'PARENT'}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='school.person')),
                ('occupation', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('person', models.OneToOneField(limit_choices_to={'role': 'STAFF'}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='school.person')),
                ('department', models.CharField(blank=True, max_length=100)),
                ('position', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('person', models.OneToOneField(limit_choices_to={'role': 'STUDENT'}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='school.person')),
                ('admission_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('person', models.OneToOneField(limit_choices_to={'role': 'TEACHER'}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='school.person')),
                ('qualification', models.CharField(blank=True, max_length=100)),
                ('joining_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.academicyear')),
            ],
            options={
                'ordering': ['academic_year', 'start_date'],
                'unique_together': {('academic_year', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('exam_type', models.CharField(choices=[('MID', 'Mid-Term'), ('FINAL', 'Final'), ('QUIZ', 'Quiz'), ('PROJECT', 'Project')], max_length=10)),
                ('total_marks', models.PositiveIntegerField(default=100)),
                ('date_conducted', models.DateField()),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.academicyear')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.semester')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.subject')),
            ],
            options={
                'ordering': ['academic_year', 'semester', 'date_conducted'],
            },
        ),
        migrations.CreateModel(
            name='ParentChildRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship', models.CharField(max_length=50)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.parent')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.student')),
            ],
            options={
                'unique_together': {('parent', 'child')},
            },
        ),
        migrations.CreateModel(
            name='ClassEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_enrolled', models.DateField(auto_now_add=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.academicyear')),
                ('class_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.class')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.student')),
            ],
            options={
                'ordering': ['academic_year', 'class_obj'],
                'unique_together': {('student', 'class_obj', 'academic_year')},
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks_obtained', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('grade', models.CharField(choices=[('A', 'A (Excellent)'), ('B', 'B (Very Good)'), ('C', 'C (Good)'), ('D', 'D (Satisfactory)'), ('E', 'E (Pass)'), ('F', 'F (Fail)')], max_length=1)),
                ('remarks', models.TextField(blank=True)),
                ('date_graded', models.DateField(auto_now_add=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.exam')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.subject')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.student')),
                ('graded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='school.teacher')),
            ],
            options={
                'ordering': ['exam__academic_year', 'exam__semester', 'subject'],
                'unique_together': {('student', 'subject', 'exam')},
            },
        ),
        migrations.CreateModel(
            name='ClassSubjectTeacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.academicyear')),
                ('class_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.class')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.semester')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.teacher')),
            ],
            options={
                'ordering': ['academic_year', 'semester', 'class_obj'],
                'unique_together': {('class_obj', 'subject', 'academic_year', 'semester')},
            },
        ),
    ]
